version: "2"
services:
  capi:
    container_name: capi
    image: surisoft/capi-gateway:1.3.2
    ports:
      - "8380:8380"
    environment:
      - spring.profiles.active=tst
      - api.gateway.api.running.inspector.period=5000
      - api.gateway.api.throttling.inspector.period=5000
      - api.gateway.grafana.create.panels=false
      - api.gateway.prometheus.endpoint=http://prometheus:9090
      - api.gateway.zipkin.endpoint=http://zipkin:9411/api/v2/spans
      - api.gateway.grafana.endpoint=http://localhost:8080/grafana
      - api.gateway.error.endpoint=localhost:8380/capi-error
      - api.gateway.traffic.inspector.enabled=true
      - api.gateway.traffic.inspector.kafka.topic=capi-traffic-inspector
      - api.gateway.traffic.inspector.kafka.groupId=capiGroup
      - api.gateway.traffic.inspector.kafka.broker=kafka:9092
      - server.ssl.enabled=true
      - server.ssl.key-store-type=PKCS12
      - server.ssl.key-store=/keys/capi.p12
      - server.ssl.key-store-password=capigateway
      - server.ssl.key-alias=capigateway
      - server.ssl.trust-store=/keys/truststore.jks
      - server.ssl.trust-store-password=capigateway
      - token.provider.key-alias=capigateway
      - token.provider.key-store-password=capigateway
      - token.provider.key-store=/keys/capi.p12
      - spring.data.mongodb.host=mongo
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.username=capi
      - spring.data.mongodb.password=capi
      - spring.data.mongodb.database=capi
      - gateway.environment=dev
      - gateway.cache.zookeeper.discovery=true
      - gateway.cache.zookeeper.host=zookeeper:2181
      - gateway.cache.zookeeper.path=/discovery/hazelcast
      - gateway.cache.zookeeper.group.key=capi
    links:
      - mongo
      - zipkin
      - kafka
      - keycloak
    volumes:
      # If you want to enable HTTPS, please map your local directory where you have the certificate for the CAPI spring boot application to be able to load it.
      # Also make sure that the server,ssl.key environment variables are not commented.
      - ./keys:/keys
  mongo:
    container_name: capi-mongo
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=capi
      - MONGO_INITDB_ROOT_USERNAME=capi
      - MONGO_INITDB_ROOT_PASSWORD=capi
    ports:
      - "27017:27017"
    volumes:
      - ./mongo/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
      - ./mongo/db/:/data/db/
  zipkin:
    container_name: capi-zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
  prometheus:
    container_name: capi-prometheus
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    links:
      - capi
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    container_name: capi-grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    links:
      - prometheus
    volumes:
      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasources.yml
  capi-rest:
    container_name: capi-rest
    image: surisoft/capi-gateway-rest:1.3.2
    ports:
      - "8080:8080"
    environment:
      - spring.data.mongodb.host=mongo
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.username=capi
      - spring.data.mongodb.password=capi
      - spring.data.mongodb.database=capi
      # Optional, uncomment if you want to enable HTTPS on your CAPI Server Rest, if so, please read also the volumes section of this service.
      - server.ssl.enabled=true
      - server.ssl.key-store-type=PKCS12
      - server.ssl.key-store=/keys/capi.p12
      - server.ssl.key-store-password=capigateway
      - server.ssl.key-alias=capigateway
      - server.ssl.trust-store=/keys/truststore.jks
      - server.ssl.trust-store-password=capigateway
      - gateway.environment=dev
      - gateway.cache.zookeeper.discovery=true
      - gateway.cache.zookeeper.host=zookeeper:2181
      - gateway.cache.zookeeper.path=/discovery/hazelcast
      - gateway.cache.zookeeper.group.key=capi
    links:
      - mongo
      - zookeeper
    volumes:
      # If you want to enable HTTPS, please map your local directory where you have the certificate for the CAPI spring boot application to be able to load it.
      - ./keys:/keys
  zookeeper:
    container_name: capi-zookeeper
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    container_name: capi-kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  keycloak:
    container_name: capi-keycloak
    image: jboss/keycloak
    ports:
      - 8081:8080
      - 9990:9990
    environment:
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export-kc.json
    volumes:
      - ./realm-export-kc.json:/tmp/realm-export-kc.json
